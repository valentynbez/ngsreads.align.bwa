[metadata]
name = ngsreads.align.bwa
version = 0.0.1
author = Valentyn Bezshapkin
author_email = valentyn.bezshapkin@micro.biol.ethz.ch
url = https://github.com/valentynbez/ngsreads.align.bwa
description = An extension for ngsreads, wrapping BWA for aligning reads.
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
platform = any
keywords = bioinformatics, read, aligner, kmer
classifier =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Typing :: Typed
project_urls =
    Bug Tracker = https://github.com/althonos/ngsreads.align.bwa/issues
    Changelog = https://github.com/althonos/ngsreads.align.bwa/blob/main/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/ngsreads.align.bwa/
    Builds = https://github.com/althonos/ngsreads.align.bwa/actions
    # PyPI = https://pypi.org/project/ngsreads.align.bwa

[options]
zip_safe = false
packages = ngsreads.align
include_package_data = true
python_requires = >=3.6
setup_requires =
    setuptools >=46.4
    cython ~=0.29.16
    ngsreads ~=0.0
install_requires =
    ngsreads ~=0.0

[options.package_data]
ngsreads.qc = py.typed, *.pyi, *.pxd, *.pyx

[coverage:run]
plugins = Cython.Coverage
include = ngsreads/qc/*.pyx

[coverage:report]
include = ngsreads/*
omit = ngsreads/tests/*
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented
    raise MemoryError()

[pydocstyle]
inherit = false
ignore = D102,D105,D200,D203,D213,D406,D407
match-dir = (?!tests)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
exclude = ngsreads/tests/*

[mypy-ngsreads.tests]
disallow_untyped_defs = false

[isort]
known_first_party = ngsreads, scythe
known_standard_library = cpython, cython
known_third_party = libc, libcpp
line_length = 88
profile = black
skip_gitignore = true
skip_glob = vendor/bwa/*